heat_template_version: 2015-10-15

description: >
  A HOT template that holds a VM instance with an attached
  Cinder volume.  The VM does nothing, it is only created.

parameters:
  key_name:
    type: string
    description: Name of an existing key pair to use for the instance
    constraints:
      - custom_constraint: nova.keypair
        description: Must name a public key (pair) known to Nova
  flavor:
    type: string
    description: Flavor for the instance to be created
    default: m1.small
    constraints:
      - custom_constraint: nova.flavor
        description: Must be a flavor known to Nova
  image:
    type: string
    description: >
      Name or ID of the image to use for the instance.
      You can get the default from
      http://cloud.fedoraproject.org/fedora-20.x86_64.qcow2
      There is also
      http://cloud.fedoraproject.org/fedora-20.i386.qcow2
      Any image should work since this template
      does not ask the VM to do anything.
    constraints:
      - custom_constraint: glance.image
        description: Must identify an image known to Glance
  network:
    type: string
    description: The network for the VM
    default: private
  vol_size:
    type: number
    description: The size of the Cinder volume
    default: 1
  vol_type:
    type: string
    description: The type of the Cinder volume
    default: NBS
  security_group:
    type: string
    description: which security group to use
    default: default
  name:
    type: string
    description: name of instance
    default: instance_foo

resources:
  my_instance:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      name: 
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks: [{network: {get_param: network} }]
      security_groups: [ {get_param: security_group } ]
      user_data: |
        #!/bin/bash -x
        sudo apt update
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y -o Dpkg::Options::="--force-confdef" git fio gnuplot pdsh collectl iftop iperf3 python-yaml python-lxml blktrace

  my_vol:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: vol_size }
      volume_type: { get_param: vol_type }

  vol_att:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: my_instance }
      volume_id: { get_resource: my_vol }
      mountpoint: /dev/vdb

outputs:
  instance_ip:
    description: The IP address of the deployed instance
    value: { get_attr: [my_instance, first_address] }
